package Presentacion;
import Conceptos.medico;
import Conceptos.servicio;
import Presentacion.SelectorDeServicios;
import Util.XML_MEDICOS;
import Util.XML_SERVICIOS;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Isaac Villalobos B, Kevin Vega 2024124285 y 2024800616
 */
public class VerMedicos extends javax.swing.JFrame {
    private JPanel panelServicios;
    public VerMedicos() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        llenartabla();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    actualizarCamposMedicos();
                }
            }
        });
        setSize(1024, 768); //Resolucion de la pantalla
        setTitle("MEDICOS");
        setResizable(false);
    }
    private void llenartabla(){
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        Vector<String> columnanombre = new Vector<String>();
        columnanombre.addElement("ID");
        columnanombre.addElement("NOMBRE");
        columnanombre.addElement("TELEFONO");
        columnanombre.addElement("PUESTO");
        Vector<Vector> rowData = new Vector<Vector>();
        for (medico p : medicos){
            Vector<String> row = new Vector<String>();
            row.addElement(p.getId());
            row.addElement(p.getNombre());
            row.addElement(p.getTelefono());
            row.addElement(p.getPuesto());
            rowData.addElement(row);
        }
        
        DefaultTableModel m = new DefaultTableModel(rowData, columnanombre) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;  // Ninguna celda es editable
            }
        };
        this.jTable1.setModel(m);
    }
    private void actualizarCamposMedicos() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) //Aqui sabemos cual esta elegida entonces podemos cambiar todo SI ES -1 NO SE A ELEGIDO NADA
        {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String id = (String) model.getValueAt(selectedRow, 0);
            String nombre = (String) model.getValueAt(selectedRow, 1);
            String telefono = (String) model.getValueAt(selectedRow, 2);
            String puesto = (String) model.getValueAt(selectedRow, 3);

            AreaID.setText(id);
            AreaNombre.setText(nombre);
            AreaTelefono.setText(telefono);
            AreaPuesto.setText(puesto);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AreaID = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        AreaNombre = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        AreaTelefono = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        AreaPuesto = new javax.swing.JTextArea();
        BorrarMedico = new javax.swing.JButton();
        ModificarMedico = new javax.swing.JButton();
        NuevoMedico = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
        jLabel2.setText("ID");

        AreaID.setColumns(10);
        AreaID.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AreaID.setRows(1);
        jScrollPane3.setViewportView(AreaID);

        AreaNombre.setColumns(10);
        AreaNombre.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AreaNombre.setRows(1);
        jScrollPane4.setViewportView(AreaNombre);

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
        jLabel4.setText("Servicios");

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
        jLabel5.setText("Telefono");

        AreaTelefono.setColumns(10);
        AreaTelefono.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AreaTelefono.setRows(1);
        jScrollPane5.setViewportView(AreaTelefono);

        AreaPuesto.setColumns(10);
        AreaPuesto.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AreaPuesto.setRows(1);
        jScrollPane6.setViewportView(AreaPuesto);

        BorrarMedico.setText("Borrar");
        BorrarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarMedicoActionPerformed(evt);
            }
        });

        ModificarMedico.setText("Modificar");
        ModificarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarMedicoActionPerformed(evt);
            }
        });

        NuevoMedico.setText("Nuevo");
        NuevoMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoMedicoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "TELEFONO", "PUESTO"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("Lista de Medicos");

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 32)); // NOI18N
        jLabel6.setText("Puesto");

        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6)))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NuevoMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ModificarMedico, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(BorrarMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(441, 441, 441)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(42, 42, 42)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(11, 11, 11)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(43, 43, 43)
                                            .addComponent(jScrollPane6))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(12, 12, 12)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NuevoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ModificarMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BorrarMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BorrarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarMedicoActionPerformed
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        if (true) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            boolean encontrado = false;
            String id = AreaID.getText();

            try {
                int idNumero = Integer.parseInt(id);

                for (int i = 0; i < medicos.size(); i++) {
                    medico p = medicos.get(i);
                    if (p.getId().equals(id)) {
                        medicos.remove(i);
                        model.removeRow(i);
                        encontrado = true;
                        JOptionPane.showMessageDialog(this, "Medico con ID " + id + " eliminado correctamente.");
                        break;
                    }
                }

                if (!encontrado) {
                    JOptionPane.showMessageDialog(this, "El ID seleccionado no existe: " + id, "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El ID debe ser un número", "Error", JOptionPane.ERROR_MESSAGE);
            }

            XML_MEDICOS.Guardar("src\\DATA\\medicos.xml", medicos);
        }
    }//GEN-LAST:event_BorrarMedicoActionPerformed

    private void ModificarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarMedicoActionPerformed
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        String id = AreaID.getText();
        String nombre = AreaNombre.getText();
        String telefono = AreaTelefono.getText();
        String puesto = AreaPuesto.getText();

        boolean encontrado = false;
        DefaultTableModel mesa = (DefaultTableModel) jTable1.getModel();

        for (medico p : medicos) {
            if (p.getId().equals(id)) {
                p.setNombre(nombre);
                p.setTelefono(telefono);
                p.setPuesto(puesto);
                encontrado = true;
                int linea = -1;
                for (int i = 0; i < mesa.getRowCount(); i++) {
                    if (mesa.getValueAt(i, 0).equals(id)) {
                        linea = i;
                        break;
                    }
                }
                if (linea != -1) {
                    mesa.setValueAt(id, linea, 0);
                    mesa.setValueAt(nombre, linea, 1);
                    mesa.setValueAt(telefono, linea, 2);
                    mesa.setValueAt(puesto, linea, 3);
                }
                JOptionPane.showMessageDialog(this, "Paciente con ID " + id + " modificado correctamente.");
                break;
            }
        }

        if (!encontrado) {
            JOptionPane.showMessageDialog(this, "No se permite modificar el ID de un usuario inexistente", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            XML_MEDICOS.Guardar("src\\DATA\\medicos.xml", medicos);
        }
    }//GEN-LAST:event_ModificarMedicoActionPerformed

    private void NuevoMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoMedicoActionPerformed
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        if (true) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            boolean encontrado = false;
            String id = AreaID.getText();
            String nombre = AreaNombre.getText();
            String telefono = AreaTelefono.getText();
            String puesto = AreaPuesto.getText();

            try {
                int idNumero = Integer.parseInt(id);
                for (medico p : medicos) {
                    if (p.getId().equals(id)) {
                        JOptionPane.showMessageDialog(this, "El ID seleccionado ya existe: " + id, "Error", JOptionPane.ERROR_MESSAGE);
                        encontrado = true;
                        break;
                    }
                }

                if (!encontrado){
                    ArrayList<servicio> serviciosnulos = new ArrayList<>(); 
                    medico medi = new medico(id, nombre, telefono, puesto, serviciosnulos);
                    medicos.add(medi);

                    Object[] newRow = {id, nombre, telefono, puesto};
                    model.addRow(newRow);
                    JOptionPane.showMessageDialog(this, "Medico con ID " + id + " agregado correctamente.");
                }
                XML_MEDICOS.Guardar("src\\DATA\\medicos.xml", medicos);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El ID debe ser un numero (No más de 9 digitos)", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_NuevoMedicoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            boolean encontrado = false;
            String id = AreaID.getText();

            // Si el médico fue encontrado, abrir la ventana SelectorDeServicios
            ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
            ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
            for (medico m : medicos){
                if(m.getId().equals(id)){
                    encontrado = true;
                }
            }
            if (encontrado) {
                SelectorDeServicios selector1 = new SelectorDeServicios(VerMedicos.this, true, id);
                selector1.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Médico no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (UnsupportedOperationException ex) {
            JOptionPane.showMessageDialog(null, "No se pudieron cargar los servicios\n" + "Contacte con soporte:\n" + ex, "Error con la pantalla", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerMedicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerMedicos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaID;
    private javax.swing.JTextArea AreaNombre;
    private javax.swing.JTextArea AreaPuesto;
    private javax.swing.JTextArea AreaTelefono;
    private javax.swing.JButton BorrarMedico;
    private javax.swing.JButton ModificarMedico;
    private javax.swing.JButton NuevoMedico;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
