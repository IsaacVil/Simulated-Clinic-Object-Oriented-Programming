/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import Conceptos.estado;
import Conceptos.medico;
import Conceptos.paciente;
import Conceptos.servicio;
import Conceptos.solicitud;
import Util.XML_ESTADOS;
import Util.XML_MEDICOS;
import Util.XML_PACIENTES;
import Util.XML_SERVICIOS;
import Util.XML_SOLICITUDES;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author taqui
 */
public class VerSolicitudes extends javax.swing.JFrame {
    public VerSolicitudes() {
        initComponents();
        setTitle("Ver Solicitudes");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ArrayList<paciente> pacientes = XML_PACIENTES.Cargar("src\\DATA\\pacientes.xml");
        for (paciente p : pacientes){
            CajadePacientes.addItem(p.getNombre());
        }
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        for (servicio s : servicios){
            CajadeServicios.addItem(s.getNombre());
        }
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        for (medico s : medicos){
            CajadeMedicos.addItem(s.getNombre());
        }
        ArrayList<estado> estados = XML_ESTADOS.Cargar("src\\DATA\\estados.xml");
        for (estado s : estados){
            CajadeEstados.addItem(s.getNombre());
        }
        llenartabla();
    }

    
    private void llenartabla(){
        ArrayList<paciente> pacientes = XML_PACIENTES.Cargar("src\\DATA\\pacientes.xml");
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        ArrayList<estado> estados = XML_ESTADOS.Cargar("src\\DATA\\estados.xml");
        ArrayList<solicitud> solicitudes = XML_SOLICITUDES.Cargar("src\\DATA\\solicitudes.xml", pacientes, medicos, servicios, estados);
        Vector<String> columnanombre = new Vector<String>();
        columnanombre.addElement("ID");
        columnanombre.addElement("NOMBRE");
        columnanombre.addElement("FECHA");
        columnanombre.addElement("MEDICO");
        columnanombre.addElement("SERVICIO");
        columnanombre.addElement("ESTADO");
        Vector<Vector> rowData = new Vector<Vector>();
        for (solicitud s : solicitudes){
            Vector<String> row = new Vector<String>();
            row.addElement(s.consultarId());
            row.addElement(s.consultarPaciente().getNombre());
            row.addElement(s.consultarFecha_hora());
            row.addElement(s.consultarMedico().getNombre());
            row.addElement(s.consultarServicio().getNombre());
            row.addElement(s.consultarEstado());
            rowData.addElement(row);
        }
        
        DefaultTableModel m = new DefaultTableModel(rowData, columnanombre) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;  // Ninguna celda es editable
            }
        };
        this.jTable1.setModel(m);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        CajadePacientes = new javax.swing.JComboBox<>();
        CajadeMedicos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        CajadeServicios = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CajadeEstados = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        SelectorInicio = new com.toedter.calendar.JDateChooser();
        SelectorFinal = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel3.setText("Paciente");

        CajadePacientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No elegido" }));
        CajadePacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CajadePacientesActionPerformed(evt);
            }
        });

        CajadeMedicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No elegido" }));
        CajadeMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CajadeMedicosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel4.setText("Medico");

        CajadeServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No elegido" }));
        CajadeServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CajadeServiciosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel5.setText("Servicio");

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel6.setText("Estado");

        CajadeEstados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No elegido" }));
        CajadeEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CajadeEstadosActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel7.setText("Desde");

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel8.setText("Hasta");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "FECHA", "MEDICO", "SERVICIO", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("Lista de Solicitudes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel4))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CajadeMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CajadePacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(CajadeServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CajadeEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SelectorInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(SelectorFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(328, 328, 328)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CajadePacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CajadeEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CajadeMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SelectorInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CajadeServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SelectorFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CajadePacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CajadePacientesActionPerformed

    }//GEN-LAST:event_CajadePacientesActionPerformed

    private void CajadeMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CajadeMedicosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CajadeMedicosActionPerformed

    private void CajadeServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CajadeServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CajadeServiciosActionPerformed

    private void CajadeEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CajadeEstadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CajadeEstadosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArrayList<paciente> pacientes = XML_PACIENTES.Cargar("src\\DATA\\pacientes.xml");
        ArrayList<servicio> servicios = XML_SERVICIOS.Cargar("src\\DATA\\servicios.xml");
        ArrayList<medico> medicos = XML_MEDICOS.Cargar("src\\DATA\\medicos.xml", servicios);
        ArrayList<estado> estados = XML_ESTADOS.Cargar("src\\DATA\\estados.xml");
        ArrayList<solicitud> solicitudes = XML_SOLICITUDES.Cargar("src\\DATA\\solicitudes.xml", pacientes, medicos, servicios, estados);
        String PacienteNombre = (String) CajadePacientes.getSelectedItem();
        String DoctorNombre = (String) CajadeMedicos.getSelectedItem();
        String ServicioNombre = (String) CajadeServicios.getSelectedItem();
        String EstadoNombre = (String) CajadeEstados.getSelectedItem();
        boolean ignorapaciente = false;
        boolean ignoradoctor = false;
        boolean ignoraservicio = false;
        boolean ignoraestado = false;
        boolean ignorafecha = false;
        boolean fechainicioyfinal = false;
        if (PacienteNombre.equals("No elegido")){
            ignorapaciente = true;
        }
        if (DoctorNombre.equals("No elegido")){
            ignoradoctor = true;
        }
        if (ServicioNombre.equals("No elegido")){
            ignoraservicio = true;
        }
        if (EstadoNombre.equals("No elegido")){
            ignoraestado = true;
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date Iniciofecha = SelectorInicio.getDate();
        Date Finalfecha = SelectorFinal.getDate();
        if (Iniciofecha == null && Finalfecha == null || Iniciofecha.equals("") && Finalfecha.equals("")){
            ignorafecha = true;
        }
        else{
            fechainicioyfinal = true;
            String Iniciofechaformato = dateFormat.format(Iniciofecha);
            String Finalfechaformato = dateFormat.format(Finalfecha);
        }
        if (fechainicioyfinal || ignorafecha){
            Vector<String> columnanombre = new Vector<String>();
            columnanombre.addElement("ID");
            columnanombre.addElement("NOMBRE");
            columnanombre.addElement("FECHA");
            columnanombre.addElement("MEDICO");
            columnanombre.addElement("SERVICIO");
            columnanombre.addElement("ESTADO");
            Vector<Vector> rowData = new Vector<Vector>();
            for (solicitud s : solicitudes) {
                boolean coincide = true;
                if (!ignorapaciente && !s.consultarPaciente().getNombre().equals(PacienteNombre)) {
                    coincide = false;
                }
                if (coincide && !ignoradoctor && !s.consultarMedico().getNombre().equals(DoctorNombre)) {
                    coincide = false;
                }
                if (coincide && !ignoraservicio && !s.consultarServicio().getNombre().equals(ServicioNombre)) {
                    coincide = false;
                }
                if (coincide && !ignoraestado && !s.consultarEstado().equals(EstadoNombre)) {
                    coincide = false;
                }
                if (coincide && fechainicioyfinal) {
                    try {
                        Date solicitudFecha = dateFormat.parse(s.consultarFecha_hora());
                        if (solicitudFecha.before(Iniciofecha) || solicitudFecha.after(Finalfecha)) {
                            coincide = false;
                        }
                    } catch (ParseException e) {
                        e.printStackTrace();
                    }
                }
                if (coincide) {
                    Vector<String> row = new Vector<String>();
                    row.addElement(s.consultarId());
                    row.addElement(s.consultarPaciente().getNombre());
                    row.addElement(s.consultarFecha_hora());
                    row.addElement(s.consultarMedico().getNombre());
                    row.addElement(s.consultarServicio().getNombre());
                    row.addElement(s.consultarEstado());
                    rowData.addElement(row);
                }
            }
            DefaultTableModel m = new DefaultTableModel(rowData, columnanombre) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;  // Ninguna celda es editable
                }
            };
            this.jTable1.setModel(m);
        }
        else{
            JOptionPane.showMessageDialog(null, "Debes elegir ambas fechas o ninguna.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerSolicitudes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CajadeEstados;
    private javax.swing.JComboBox<String> CajadeMedicos;
    private javax.swing.JComboBox<String> CajadePacientes;
    private javax.swing.JComboBox<String> CajadeServicios;
    private com.toedter.calendar.JDateChooser SelectorFinal;
    private com.toedter.calendar.JDateChooser SelectorInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
